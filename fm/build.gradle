apply plugin: 'com.android.library'
//-------------------------上传到jcenter-----------------------
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
//-------------------------上传到jcenter-----------------------


version = "1.0.2"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName version

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            res.srcDirs = ['src/main/res','src/main/res/perms']
            assets.srcDirs = ['src/main/assets']
            jniLibs.srcDirs = ['libs']
            aidl.srcDirs = ['src/main/java']
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.yidont:headtool:1.3'
    compile 'com.yidont:fit:1.5.1'
    compile 'com.yidont:flux:1.0.3'
    compile 'me.yokeyword:fragmentation-swipeback:0.7.9'
    compile 'me.yokeyword:fragmentation:0.9.5'

}







//-------------------------上传到jcenter-----------------------

def siteUrl = 'https://github.com/forplane/fm.git'      // 项目的主页   这个是说明，可随便填
def gitUrl = 'https://github.com/forplane/fm.git'      // Git仓库的url  这个是说明，可随便填
group = "com.yidont"    // 这里是groupId ,必须填写  一般填你唯一的包名

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'fm'     //项目描述
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The YiDont Software License, Version 1.4'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'huangjh'        //填写开发者的一些基本信息
                        name 'huangjh'    //填写开发者的一些基本信息
                        email 'huiji454537122@gmail.com'   //填写开发者的一些基本信息
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}


task javadoc(type: Javadoc) {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
    }
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(configurations.compile.files,android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}


//android.libraryVariants.all { variant ->
//    println variant.javaCompile.classpath.files
//    if(variant.name == 'release') { //我们只需 release 的 javadoc
//        task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
//            // title = ''
//            // description = ''
//            source = variant.javaCompile.source
//            classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
//            options {
//                encoding "utf-8"
//                links "http://docs.oracle.com/javase/7/docs/api/"
//                linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
//            }
//            exclude '**/BuildConfig.java'
//            exclude '**/R.java'
//        }
//        task("javadoc${variant.name.capitalize()}Jar", type: Jar, dependsOn: "generate${variant.name.capitalize()}Javadoc") {
//            classifier = 'javadoc'
//            from tasks.getByName("generate${variant.name.capitalize()}Javadoc").destinationDir
//        }
//        artifacts {
//            archives tasks.getByName("javadoc${variant.name.capitalize()}Jar")
//        }
//    }
//}




Properties properties = new Properties()
properties.load(project.file('local.properties').newDataInputStream())
bintray {
//    userOrg=properties.getProperty("bintray.user")
    user = properties.getProperty("bintray.user")    //读取 local.properties 文件里面的 bintray.user
    key = properties.getProperty("bintray.apikey")   //读取 local.properties 文件里面的 bintray.apikey
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "fm"    //发布到JCenter上的项目名字，必须填写
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

//-------------------------上传到jcenter-----------------------
